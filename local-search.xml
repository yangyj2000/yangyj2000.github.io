<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>考研经验帖</title>
    <link href="/2023/04/25/%E8%80%83%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/"/>
    <url>/2023/04/25/%E8%80%83%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/</url>
    
    <content type="html"><![CDATA[<h1 id="一、引言"><a href="#一、引言" class="headerlink" title="一、引言"></a>一、引言</h1><p>时间如白驹过隙，两年的考研时光已落下帷幕…</p><p>自2021年1月16日买下张宇基础30讲开始，到2023年4月6日被拟录取结束，期间经历了太多，心情也随之跌宕起伏，每每回忆起来仍感慨万分，遂决定记录下这两年经历的大概，也算是为我的考研画上一个句号，继续我的研究生求学之旅。</p><h1 id="二、简要介绍"><a href="#二、简要介绍" class="headerlink" title="二、简要介绍"></a>二、简要介绍</h1><p>本科郑州大学计算机科学与技术专业，一战中国科学技术大学085404计算机技术，因在校期间担任班长一职，没能很好的平衡工作与学习，没能进入复试，痛定思痛，决定再战一年，二战仍然选择的是中国科学技术大学085404计算机技术，这次虽然进入了复试，但是分到了一个严格的面试组，最终无情的被淘汰，心情如同跌入谷底，开始找工作不再对上岸抱有希望(因为调剂不想去双非院校，再加上今年中科院研究所不再接受校外调剂的缘故，以为没有希望了)，然而在4号晚上接到了中国石油大学研招办的电话，让我看到了一丝曙光！最终成功上岸中国石油大学（华东）083500软件工程。</p><p>二战初试成绩总分329分</p><table><thead><tr><th align="center">科目</th><th align="center">成绩</th></tr></thead><tbody><tr><td align="center">政治</td><td align="center">66</td></tr><tr><td align="center">英语一</td><td align="center">61</td></tr><tr><td align="center">数学一</td><td align="center">101</td></tr><tr><td align="center">408计算机</td><td align="center">101</td></tr></tbody></table><p>本科期间加入校仿真机器人实验室，参与仿真3D组项目并荣获国家二等奖；课余时间参加河南省蓝桥杯C++组获二等奖；连续三个学年获得校优秀学生干部；2022年评为郑州大学最佳印象毕业生称号。</p><h1 id="三、初试经验"><a href="#三、初试经验" class="headerlink" title="三、初试经验"></a>三、初试经验</h1><p>本章将分别写出一战与二战的备考经历</p><h2 id="政治"><a href="#政治" class="headerlink" title="政治"></a>政治</h2><p>作为计算机的考生，政治不能放在非常重要的位置上，特别是考408的考生，因为其他学科需要大量的时间复习，无论是一战还是二战我的政治复习都是从7月开始复习的。</p><h3 id="一战"><a href="#一战" class="headerlink" title="一战"></a>一战</h3><ul><li>一战我听的徐涛老师的强化班，配套使用的是核心考案，从7月开始听课，边听课边做徐涛的优题库，做完题库后只做了肖八肖四，背了肖四前2卷，不过2022年考研政治比较容易，所以政治表现良好。</li></ul><h3 id="二战"><a href="#二战" class="headerlink" title="二战"></a>二战</h3><ul><li>二战我就没有听课了，7月开始过了一遍书并配套做优题库，做完后继续刷了肖1000题、徐涛6套卷、腿姐4套卷、肖4和肖8的选择题，本来计划是至少背3套肖四，但是最后几天阳了，只背完2套半。2023年的政治选择题比较怪所以导致今年政治分数普遍比较低。</li></ul><p><strong>政治这门学科算是四门课里最简单的了，考试前一晚特别担心自己背的明天都不考怎么办，真正上考场之后才发现自己就是一个无情的复制机器，脑子里只要和题目相关的就写上去，实在想不到就抄材料，考前会有很多老师总结如何正确的抄材料。</strong></p><h2 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h2><p>英语一和英语二的难度还是有很大差别的，不过要相信自己认真学习总会能考到60+甚至70+的。英语就只用做真题，不用去买模拟卷回来做，真题的质量是无法比较的。每天都要坚持背单词！一直背到考前一天。</p><h3 id="一战-1"><a href="#一战-1" class="headerlink" title="一战"></a>一战</h3><ul><li>3月-4月简单听了一遍田静老师的语法和长难句课程</li><li>用的单词书+墨墨背单词，每天大概50个单词</li><li>7月开始刷真题，买的是考研真相，大致分为03-09、10-16、17-21年三本书，我是先刷03-09年一遍，每张卷子都认真分析错题，记录不会的单词，再刷第二遍。之后继续10-16年和17-21年，每张卷子基本上都三刷。</li><li>11月开始用批改网简单写了写作文<h3 id="二战-1"><a href="#二战-1" class="headerlink" title="二战"></a>二战</h3></li><li>用的墨墨+不背单词+百词斩，大概每2-3个月就换个软件，主要是因为背久了容易视觉疲劳，每天大概100个单词左右</li><li>刷真题的方式和一战基本一致，当一张卷子二刷时就会记住答案，但是做题目必须要知道四个选项错在哪里，为什么不选这个，要在文中找到出处，英语阅读喜欢采用一些同义词替代的方法迷惑考生</li><li>11月开始跟着田静老师的公众号背小作文模板，大作文背些好句子，背完后要默写，看看自己的拼写有没有问题</li><li>12月买了一本英语字帖练了练，为了作文的卷面分</li></ul><p><strong>英语这门课重在坚持，刚开始做卷子非常痛苦，基本上阅读和完形能错一半，量变引起质变，考研前参加了六级考试533分，也算是提升了英语水平。2022年的英语比较容易，2023年的英语比较难，所以考试成绩有所起伏</strong></p><h2 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h2><p>数学是这个世界上唯一不会欺骗你的事物，你不会就是不会，考场上再急都不行😄就是要多做题，多练习，没有捷径可走，而且这门课比较看天赋，有的人就是学的快学的好，确实没办法。</p><h3 id="一战-2"><a href="#一战-2" class="headerlink" title="一战"></a>一战</h3><ul><li>3月-6月听了两遍张宇基础30讲，写了基础300题</li><li>7月开始张宇强化36讲+张宇1000题，一直做到10月多</li><li>最后的时间做了张宇8+4和10-21年真题<h3 id="二战-2"><a href="#二战-2" class="headerlink" title="二战"></a>二战</h3></li><li>7月前重温了一遍张宇36讲</li><li>9月前写了张宇1000题A组、李永乐660+330</li><li>10月开始写06-22年真题，真题最后做了2遍</li><li>模拟卷写了张宇8+4、李林6+4、李永乐6+3+3</li></ul><p><strong>做了这么多卷子也不过才刚刚过100分，虽然最后几天因为阳了没法冲刺，不过也确实看出来我的数学天赋还是差了一点，这也是我为什么不愿意三战的原因，基本上该写的卷子都认真写了，没有太多的遗憾了；至于数学这门课做题&gt;&gt;听课，我一战就是因为时间基本上花在听课上了，一听就会一做就错，二战我吸取教训多做题，多总结。而且最后做卷子尽量选在上午掐表3小时，有些实在不会的题目就跳过，毕竟不是奔着满分去的，客观题要细致！</strong></p><h2 id="408计算机"><a href="#408计算机" class="headerlink" title="408计算机"></a>408计算机</h2><p>408计算机算是除了清华计算机自命题外最难的科目了，要复习四门课，内容很多很杂，需要反复仔细的看书做题，再加上数学一算是统考界天花板难度了。</p><h3 id="一战-3"><a href="#一战-3" class="headerlink" title="一战"></a>一战</h3><ul><li>王道四本书只过了一遍，10月之后开始做王道的真题书和模拟卷</li><li>基本上没学明白，考试的时候因为上午数学考的很差，下午也没心情考了，等于是去看看卷子陪跑<h3 id="二战-3"><a href="#二战-3" class="headerlink" title="二战"></a>二战</h3></li><li>王道四本书9月前过了3遍，基本上2-3个月过完一遍</li><li>第一遍只做选择题，第二遍做大题和错误的选择题，第三题做标记的重点题和错题，并将未掌握的知识点记在笔记本上</li><li>9月开始做王道1000题中标出的重点题+刷了真题3遍</li><li>做真题也是要掐表3小时，对于第三遍仍然模糊的题目一定要重点掌握，因为这是你的知识盲区！</li><li>王道模拟卷看个人情况抉择</li><li>报了王道的冲刺课和押题班，对考试还是有一定的帮助的</li></ul><p><strong>专业课考试真题每年都有很多类似的题目，所以做真题会让你拿到80%的分数，剩下的20%出题老师会出一些从来没见到过的题目，这也是一定的区分度了，剩下的就看细致程度了，毕竟客观题80分，如果能多拿分最后肯定不会差。408就是要反反复复的学，反反复复的做题，每个知识点都不能轻视。</strong></p><h1 id="四、考试过程（纯记录）"><a href="#四、考试过程（纯记录）" class="headerlink" title="四、考试过程（纯记录）"></a>四、考试过程（纯记录）</h1><p>考试前7天正处于全国疫情较严重的时候，当时各路营销机构都在炒作，有的说考研会延期，有的说借考很难实现，现在回头看这些营销号就像跳梁小丑一般。所以考研备考中要心无旁骛，以不变应万变。</p><p>我18号早上就开始出现嗓子有异物感，脑袋也是一天比一天晕的感觉，这就导致我每天都在怀疑自己是不是阳了，但是那几天又没有核酸检测了，所以始终处于“薛定谔”状态，最后几天一直静不下心来冲刺，直到最后考前72小时要求一次核酸才彻底确定感染，21号上午做完核酸当天夜里就烧起来了，最后两天基本上在床上躺着的，只坚持背了半天的肖四。</p><p>考试第一天早上为了不发烧吃了一粒布洛芬缓释胶囊，导致写政治的时候脑袋飘飘的，精神上极度亢奋，生理上疲惫不堪，中午的饭都吃不动的那种。政治考试基本上没有发挥失常一说，半小时做选择题，半小时一道大题。下午的英语考试先写作文，再做阅读、新题型、翻译，最后做完形填空。</p><p>第二天的状态就比第一天好了一些，数学和专业课基本上都是平平无奇，没有太大的失误也没有超常发挥，下午考完以后并没有特别的轻松，坐在公交车上看着田静老师的直播，有一种怅然若失的空洞感，继而在微信上收到父亲感染肺炎住院的消息使得我更无法拥有放松的心情。地球还是依旧转着，人们依旧在忙碌着自己的事情。</p><h1 id="五、复试"><a href="#五、复试" class="headerlink" title="五、复试"></a>五、复试</h1><p>时间到了2023年2月21日，上午10点查到成绩后感觉勉强能进复试，于是开始准备复试，每天都去看看排名网站，心情依旧如同过山车一般。复试我首先向同专业的学长了解去年复试都大概问了些什么，然后开始先准备英语的自我介绍和问题回答，每天都坚持背直到最后成为肌肉记忆的感觉，可以不用想就能一直背完。再复习一遍408四门课，针对其中的知识点进行记忆，最后再着重复习我在本科期间的仿真机器人项目，设想老师会提问哪些问题，我应该怎么回答。</p><h2 id="一志愿复试"><a href="#一志愿复试" class="headerlink" title="一志愿复试"></a>一志愿复试</h2><p>2023年3月26日上午我前往中科大进行复试，我被分在了其中一个小组的第一个，这就奠定了复试的基调是不利的，老师特别有精神的时候会喜欢问很多问题。当我开始复试后发现这个组的面试老师问的问题和我之前学长说的一点不一样，后来了解其他组的面试过后发现这个组就是与众不同。</p><p>正常的组提问英语都是问一些常规问题，如介绍一下你的本科学校、家乡，说说你的兴趣爱好等等，专业面试问一些你的项目和专业课的知识。而且我这组的英语面试老师正好是主考官，他问英语的时候不看着我，而是低头看着我的简历，说话声音还小，导致我需要让老师重复几遍问题才能听清，这就使得他变得不耐烦起来，开始全程拷打我。</p><p>我这组的老师英语问题如下：</p><p>Q：说一说你在项目中担任的角色和所做的工作？（英语）</p><p>Q：说一说你的读研兴趣方向以及准备如何在这方面开展工作？（英语）</p><p>接下来中文提问由5个老师依次提问：</p><p>Q：如果让你设计一个基于人工智能的人机象棋对战，你会采用什么样的数据结构？如果添加悔棋功能你会用什么结构去实现？</p><p>Q: 请说一说正定矩阵和半正定矩阵？（我直接懵了，初试之后再没有看过数学了）</p><p>主考官开始提问关于我的机器人项目和毕设项目，最后说我的机器人项目有些方向没有考虑到，我的毕设项目太过普通。然而我的机器人项目不会出现他说的那个问题，而且我的毕设题目是指导老师分配的，我也没有选择的权力。</p><p>Q：请说一说编译原理的基本过程？中间优化代码的方法有哪些？</p><p>Q：请介绍一下Spring boot和Mybatis的工作原理？</p><p>Q: 你的项目大概写了多少行代码？</p><p>整个面试的问题基本上回答了七七八八，其实没有那么多不回答的，但是我出来也意识到自己会被刷掉了，回到家很难受，最终名单出来后确实被刷了，那几天非常的难受，同时也不再抱希望能上岸了，开始找工作为主了。</p><h2 id="调剂"><a href="#调剂" class="headerlink" title="调剂"></a>调剂</h2><p>那段时间每天都在网上看各个学校调剂的通知，一边投简历一边找调剂。有些学校会发布自己的调剂问卷，需要提前填写，如果没有收到回复的话正式调剂时就可以不用填了，比如兰州大学和西北农林科技大学等等，这两个学校都比较喜欢本科出身好的，一志愿报的好学校。</p><p>研招网调剂意向系统开通后能填写10个意向，我填了9个，其中就有一个中国石油大学（当时也是稀里糊涂就填了，现在想来也算是命运吧）。4月4号傍晚我接到了中石油大学研招办的电话，我当时人在外面散步，整个人先是懵了再是一丝喜悦。老师问我是否愿意参加调剂复试，我自然是爽快的答应了，毕竟就收到了这么一个电话。</p><p>6号凌晨开通系统后填写了申请调剂，上午10点多通知我12点开始复试，准备双机位线上面试，等到13点左右我的面试开始。首先是1分钟左右的自我介绍，屏幕共享自己的简历。介绍完以后抽一个题号，里面有一道程序阅读题，一道软工导论的概念题和一道英语翻译题。给7分钟时间思考，5分钟时间作答。</p><p>我除了软工导论的题目不会，其他都回答出来了。然后是英语提问1-2个问题。接着就开始问一些项目相关的问题以及本科学习情况等到。面试完感觉有希望能上岸。果然下午四点半就收到了拟录取通知，点击“接受”按钮的那一刻我的两年考研生涯算是收尾了。</p><p>意外就是我从085404专硕调剂到了083500学硕，所以在这里告诉大家不存在什么专硕不能调学硕，教育部的规定是调剂需要在同一学科门类即代码前2位数字相同+统考科目需要相同或相近；如果学校没有明确规定就可以调剂。</p><h1 id="六、尾记"><a href="#六、尾记" class="headerlink" title="六、尾记"></a>六、尾记</h1><p><strong>考研这两年学到的远不止书本上的那些东西，这个过程就是要耐住性子，经受住娱乐的诱惑，我认为这大概就是为读研做铺垫，读研亦是要每天坚持阅读文献、做项目和写论文。因为一战失利，我错过了大学最后一个学期，我觉得那个学期是大学四年里最美好的时光了，因为那些上岸和找到工作的同学们可以尽情享受美好的生活，而我只能一边复习一边做毕设，每天待在实验室里躲避世俗，好在结果尚能接受，努力没有白费。</strong></p><p><strong>经过这次考研，我发现成功=努力+运气，努力是必须的，运气也是，没有那一点点的运气在，再多的努力也是白费。</strong></p><p>几千年封建制度下的科举思想使得每个读书人都以秀才、举人以及进士这等头衔来一较高低，现在想想依旧如此，我们都在以本科、硕士和博士学位来表现读书高低，或许多少年后回头看，学历其实并不是陪伴一生的，在求学过程中学到的知识、理念和方法才是我们一生的财富。</p><h1 id="七、致谢"><a href="#七、致谢" class="headerlink" title="七、致谢"></a>七、致谢</h1><ul><li>首先感谢父母的鼎力支持，让我脱产再战一年，尽可能为我创造出有利的考研条件，感恩父母！暂时放下理想，去为生计奔波，往往是人生中的第一道分水岭，感谢父母让我继续追逐理想！</li><li>同时也要感谢考研过程中帮助过我的各位老师，学长学姐和学弟学妹们，愿有你们的青春永不散场！</li><li>最后也要感谢二战考研过程中陪伴我的研友-“顾老师”，这一年里的互相鼓励、互相答疑数学题是使我坚持下来的动力！</li></ul><p><em>愿所有真心想上岸的同学最终都能如愿！加油！</em></p>]]></content>
    
    
    <categories>
      
      <category>记录生活</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Robocup-3D平台安装教程</title>
    <link href="/2022/01/13/Robocup-3D%E5%B9%B3%E5%8F%B0%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <url>/2022/01/13/Robocup-3D%E5%B9%B3%E5%8F%B0%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="RoboCup3D平台安装"><a href="#RoboCup3D平台安装" class="headerlink" title="RoboCup3D平台安装"></a>RoboCup3D平台安装</h1><h2 id="一、搭建环境"><a href="#一、搭建环境" class="headerlink" title="一、搭建环境"></a>一、搭建环境</h2><p><strong>Ubuntu (目前测试成功版本16.04、18.04、20.04 LTS)</strong><br><br><strong>rcsserver3d 0.7.3</strong><br><br><strong>simspark 0.3.2</strong><br></p><hr><p><em>仿真平台搭建环境比较严格，目前只在LTS(long term system)长期支持版本测试成功</em></p><h2 id="二、安装依赖"><a href="#二、安装依赖" class="headerlink" title="二、安装依赖"></a>二、安装依赖</h2><figure class="highlight javascript"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><pre><code class="hljs javascript">apt-get install g++<br>apt-get install git<br>apt-get install cmake<br>apt-get install libfreetype6-dev<br>apt-get install libode-dev<br>apt-get install libsdl-dev<br>apt-get install ruby<br>apt-get install ruby-dev<br>apt-get install libdevil-dev<br>apt-get install libboost-dev<br>apt-get install libboost-thread-dev<br>apt-get install libboost-regex-dev<br>apt-get install libboost-system-dev<br>apt-get install qt5-<span class="hljs-keyword">default</span><br></code></pre></td></tr></table></figure><h2 id="三、配置GitHub-非第一次用，请忽略"><a href="#三、配置GitHub-非第一次用，请忽略" class="headerlink" title="三、配置GitHub(非第一次用，请忽略)"></a>三、配置GitHub(非第一次用，请忽略)</h2><h3 id="创建SSH-Key-youremail-example-com换成注册GitHub的邮箱"><a href="#创建SSH-Key-youremail-example-com换成注册GitHub的邮箱" class="headerlink" title="创建SSH Key(youremail@example.com换成注册GitHub的邮箱)"></a>创建SSH Key(<code>youremail@example.com</code>换成注册<code>GitHub</code>的邮箱)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">ssh-keygen -t rsa -C <span class="hljs-string">&quot;youremail@example.com&quot;</span><br></code></pre></td></tr></table></figure><p>将<code>.ssh</code>路径下的<code>id_rsa.pub</code>文件中的密钥添加到 GitHub 上（在GitHub中点击右上角头像 -&gt; Settings，选择 SSH and GPG keys，新建一个ssh keys，复制文件中的密钥进行粘贴）</p><h3 id="检查是否绑定成功"><a href="#检查是否绑定成功" class="headerlink" title="检查是否绑定成功"></a>检查是否绑定成功</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">ssh -T git@github.com<br></code></pre></td></tr></table></figure><h3 id="配置用户名和地址"><a href="#配置用户名和地址" class="headerlink" title="配置用户名和地址"></a>配置用户名和地址</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">git config --<span class="hljs-built_in">global</span> user.name <span class="hljs-string">&quot;Your Name&quot;</span><br>git config --<span class="hljs-built_in">global</span> user.email <span class="hljs-string">&quot;youremail@example.com&quot;</span><br></code></pre></td></tr></table></figure><h2 id="四、clone源码包"><a href="#四、clone源码包" class="headerlink" title="四、clone源码包"></a>四、clone<a href="https://gitlab.com/robocup-sim/SimSpark">源码包</a></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">git clone git@github.com:zzufootball/SIMSPARK.git<br></code></pre></td></tr></table></figure><h2 id="五、Install"><a href="#五、Install" class="headerlink" title="五、Install"></a>五、Install</h2><p>打开主目录下的SIMSPARK文件夹，右键打开终端，执行命令：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">./build.sh<br></code></pre></td></tr></table></figure><h2 id="六、Run"><a href="#六、Run" class="headerlink" title="六、Run"></a>六、Run</h2><p>在桌面Ctrl+Alt+T打开终端输入命令：<br>(平台打开则安装成功)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">rcsoccersim3d<br></code></pre></td></tr></table></figure><h2 id="七、更换监视器"><a href="#七、更换监视器" class="headerlink" title="七、更换监视器"></a>七、更换<a href="https://github.com/magmaOffenburg/RoboViz">监视器</a></h2><h3 id="1、安装JDK-1-8"><a href="#1、安装JDK-1-8" class="headerlink" title="1、安装JDK 1.8"></a>1、安装JDK 1.8</h3><p>打开终端输入命令：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">sudo apt-cache search jdk<br>sudo apt-get install openjdk-<span class="hljs-number">8</span>-jdk<br></code></pre></td></tr></table></figure><h3 id="2、clone源码包"><a href="#2、clone源码包" class="headerlink" title="2、clone源码包"></a>2、clone源码包</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">git clone https:<span class="hljs-comment">//github.com/magmaOffenburg/RoboViz.git</span><br></code></pre></td></tr></table></figure><p><em>若VM虚拟机网速过慢可以先安装VMware Tools，在Windows系统下载<a href="https://github.com/magmaOffenburg/RoboViz">源码包</a>再复制到Linux系统中进行解压</em></p><h3 id="3、安装"><a href="#3、安装" class="headerlink" title="3、安装"></a>3、安装</h3><p>打开解压过的Roboviz-master文件夹中的scripts目录，右键打开终端，输入命令：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">./build.sh<br></code></pre></td></tr></table></figure><h3 id="4、更改配置文件"><a href="#4、更改配置文件" class="headerlink" title="4、更改配置文件"></a>4、更改配置文件</h3><p>继续输入命令<code>sudo gedit /usr/local/bin/rcsoccersim3d</code>，打开一个记事本，找到第27行，修改路径将<code>MON</code>路径换成<code>/home/用户名/Roboviz-master/bin/roboviz.sh</code>，接着在第二行加一句<code>cd /home/用户名/Roboviz-master/bin</code>，这里路径中的文件名都要以最新的文件名为标准灵活修改<br></p><h3 id="5、Run"><a href="#5、Run" class="headerlink" title="5、Run"></a>5、Run</h3><p>(重新执行步骤六，这时监视器已换成<code>Roboviz</code>)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">rcsoccersim3d<br></code></pre></td></tr></table></figure><h2 id="更换模式"><a href="#更换模式" class="headerlink" title="更换模式"></a>更换模式</h2><h3 id="切换到优化模式"><a href="#切换到优化模式" class="headerlink" title="切换到优化模式"></a>切换到优化模式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">./scripts/simspark_optimize_mode.sh<br></code></pre></td></tr></table></figure><h3 id="切换到正常模式"><a href="#切换到正常模式" class="headerlink" title="切换到正常模式"></a>切换到正常模式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">./scripts/simspark_normal_mode.sh  <br></code></pre></td></tr></table></figure><hr><ul><li><a href="https://github.com/magmaOffenburg">magmaOffenburg</a></li><li><a href="https://github.com/LARG/utaustinvilla3d">utaustinvilla3d</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Robocup_3D</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github搭建个人博客</title>
    <link href="/2022/01/09/Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2022/01/09/Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>使用 GitHub + hexo 搭建个人博客</p><h1 id="使用Github搭建个人博客"><a href="#使用Github搭建个人博客" class="headerlink" title="使用Github搭建个人博客"></a>使用Github搭建个人博客</h1><h3 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h3><h4 id="1、-Github-账号"><a href="#1、-Github-账号" class="headerlink" title="1、 Github 账号"></a>1、 Github 账号</h4><p>需要注册一个<a href="https://github.com/">Github</a>账号，注册过程很简单，在此不多赘述。</p><h4 id="2、安装-Git"><a href="#2、安装-Git" class="headerlink" title="2、安装 Git"></a>2、安装 Git</h4><p>在电脑上先安装一个<a href="https://git-scm.com/downloads"><strong>Git</strong></a>，后面<strong>Hexo</strong>部署到<strong>Github</strong>时要用。</p><p>安装完成后在命令行中输入如下命令，配置Git用户名和邮箱地址。</p><figure class="highlight cpp"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp">git config --global user.name <span class="hljs-string">&quot;Your Name&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;email@example.com&quot;</span><br></code></pre></td></tr></table></figure><h4 id="3、安装-NodeJS"><a href="#3、安装-NodeJS" class="headerlink" title="3、安装 NodeJS"></a>3、安装 NodeJS</h4><p>在电脑上安装<a href="https://nodejs.org/zh-cn/download/"> <strong>NodeJS</strong> </a>， <strong>Hexo</strong> 是基于 <strong>NodeJS</strong> 编写的，所以需要安装 <strong>NodeJS</strong> 和 <strong>npm</strong> 工具。</p><p><strong>以上完成后在命令行输入命令，检查是否安装成功。</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">hexo -v<br>node -v<br>npm -v<br></code></pre></td></tr></table></figure><h3 id="二、创建仓库"><a href="#二、创建仓库" class="headerlink" title="二、创建仓库"></a>二、创建仓库</h3><p><img src="1.png" alt="创建仓库"></p><p><strong>尤其注意的是仓库名必须和Github的账号保持一致！</strong></p><p>可以点击<code>creating a new file</code>创建一个新文件，命名为”index.html”，内容如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>XXX<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>XXX的个人主页<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Hello ~<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>Github Pages 中找到我们的主页，浏览访问</p><p><img src="2.png" alt="浏览主页"></p><p>这里展示的主页很简陋，只是给大家演示一下Github Pages的使用方法。</p><h3 id="三、安装-Hexo"><a href="#三、安装-Hexo" class="headerlink" title="三、安装 Hexo"></a>三、安装 Hexo</h3><p><em>我们采用 Hexo 来创建我们的博客网站，Hexo 是一个基于 NodeJS 的静态博客网站生成器，使用 Hexo 不需开发，只要进行一些必要的配置即可生成一个个性化的博客网站，非常方便。</em></p><p><strong>打开cmd命令行</strong></p><p>1、安装 Hexo</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure><p>2、查看版本</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo -v</span><br></code></pre></td></tr></table></figure><p>3、创建一个项目 hexo-blog 并初始化</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">hexo init hexo-<span class="hljs-keyword">blog</span><br><span class="hljs-keyword"></span>cd hexo-<span class="hljs-keyword">blog</span><br><span class="hljs-keyword"></span>npm <span class="hljs-keyword">install</span><br></code></pre></td></tr></table></figure><p>4、本地启动</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g</span><br><span class="hljs-attribute">hexo s</span><br></code></pre></td></tr></table></figure><p>浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a>，页面默认主图风格如下:</p><p><img src="3.png" alt="默认页面"></p><h3 id="四、更换主题"><a href="#四、更换主题" class="headerlink" title="四、更换主题"></a>四、更换主题</h3><p><em>Hexo 默认的主题不太好看，不过官方提供了数百种主题供用户选择，可以根据个人喜好更换，官网主题点<a href="https://hexo.io/themes/">这里</a>查看。这里介绍 <strong>fluid</strong> 主题的使用方法。</em></p><p>1、 安装主题</p><p>首先下载<a href="https://github.com/fluid-dev/hexo-theme-fluid/releases">最新版本</a>，将压缩包解压后重命名为fluid，将文件夹转移至之前创建的项目hexo-blog下面的themes目录中。</p><p>2、修改配置</p><p>修改项目hexo-blog根目录下的文件<code>_config.yml</code>:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span>  <span class="hljs-comment"># 第11行左右</span><br><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span>  <span class="hljs-comment"># 第100行左右</span><br></code></pre></td></tr></table></figure><p>3、创建[关于页]</p><p>首次使用主题的“关于页”需要手动创建：</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> about<br></code></pre></td></tr></table></figure><p>创建成功后，编辑项目hexo-blog目录下的/source/about/index.md，添加layout属性。</p><p>修改后示例如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">about</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2020-02-23 19:20:33</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">这里写关于页的正文，支持</span> <span class="hljs-string">Markdown,</span> <span class="hljs-string">HTML</span><br></code></pre></td></tr></table></figure><p>4、本地启动</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g -d</span><br><span class="hljs-attribute">hexo s</span><br></code></pre></td></tr></table></figure><p><strong>浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a>，Fluid主题风格页面如下</strong></p><p><img src="4.png" alt="Fluid主题"></p><h3 id="五、创建文章"><a href="#五、创建文章" class="headerlink" title="五、创建文章"></a>五、创建文章</h3><p><strong>修改项目hexo-blog目录下的<code>_config.yml</code>文件，打开这个配置是为了在生成文章的时候生成一个同名的资源目录用于存放图片文件。</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p><strong>执行命令创建一篇新文章，进行测试</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-string">hexo</span> <span class="hljs-string">new</span> <span class="hljs-string">post</span> <span class="hljs-string">测试文章</span><br></code></pre></td></tr></table></figure><p>执行完成后在<code>source\_posts</code>目录下生成了一个md文件和一个同名的资源目录(用于存放图片)</p><p>在资源目录测试文章中放一张图片 test.png</p><p>在测试文章.md中添加内容如下，演示了图片的三种引用方式。</p><p>第一种为官方推荐用法</p><p>第二种为markdown语法</p><p>第三种和前两种图片存放位置不一样，是将图片放在\source\images目录下。这三种写法在md文件中图片是无法显示的，但是在页面上能正常显示。</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs md">---<br>title: 测试文章<br>date: 2021-06-10 16:35:20<br>tags:<br><span class="hljs-bullet">-</span> 原创<br>categories:<br><span class="hljs-section">- Java</span><br><span class="hljs-section">---</span><br><br>这是一篇测试文章<br><br>&#123;% asset<span class="hljs-emphasis">_img test.png 图片引用方法一 %&#125;</span><br><span class="hljs-emphasis"></span><br><span class="hljs-emphasis">![<span class="hljs-string">图片引用方法二</span>](<span class="hljs-link">test.png</span>)</span><br><span class="hljs-emphasis"></span><br><span class="hljs-emphasis">![<span class="hljs-string">图片引用方法三</span>](<span class="hljs-link">/images/test.png</span>)</span><br></code></pre></td></tr></table></figure><p><strong>本地启动，查看效果</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g -d</span><br><span class="hljs-attribute">hexo s</span><br></code></pre></td></tr></table></figure><p>浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a>，页面如下，文章添加成功</p><p><img src="5.png" alt="测试文章"></p><h3 id="六、个性化页面设置"><a href="#六、个性化页面设置" class="headerlink" title="六、个性化页面设置"></a>六、个性化页面设置</h3><h4 id="1、浏览器tab页名称"><a href="#1、浏览器tab页名称" class="headerlink" title="1、浏览器tab页名称"></a>1、浏览器tab页名称</h4><p>修改项目hexo-blog目录下的<code>_config.yml</code>中的title字段</p><p><img src="6.png" alt="修改tab页名称"></p><h4 id="2、博客标题"><a href="#2、博客标题" class="headerlink" title="2、博客标题"></a>2、博客标题</h4><p>修改项目hexo-blog的themes\fluid目录下<code>_config.yml</code>文件中的blog-titile字段。</p><p><img src="7.png" alt="博客标题"></p><h4 id="3、主页正中间文字"><a href="#3、主页正中间文字" class="headerlink" title="3、主页正中间文字"></a>3、主页正中间文字</h4><p>修改项目hexo-blog的themes\fluid目录下<code>_config.yml</code>文件中的text字段。</p><p><img src="8.png" alt="主页中间文字"></p><h3 id="七、添加阅读量统计"><a href="#七、添加阅读量统计" class="headerlink" title="七、添加阅读量统计"></a>七、添加阅读量统计</h3><p><em>Fluid 主题写好了统计阅读量的代码，但是缺少相应配置所以没有开启，需要借助三方服务来统计阅读量，这里是有 Leancloud 的免费服务来进行统计。</em></p><h4 id="1、申请leancloud账号并创建应用"><a href="#1、申请leancloud账号并创建应用" class="headerlink" title="1、申请leancloud账号并创建应用"></a>1、申请leancloud账号并创建应用</h4><p>进入<a href="https://console.leancloud.cn/apps">官网</a>注册账号，并完成实名认证，验证邮箱</p><p><img src="9.png" alt="注册"></p><p><img src="10.png" alt="验证邮箱"></p><p>创建应用，选择开发版，进入该应用的 设置-&gt;应用凭证，找到 AppID 和 AppKey，记录下来后面配置要用。</p><p><img src="11.png" alt="创建应用"></p><p><img src="12.png" alt="应用凭证"></p><h4 id="2、修改-fluid-配置"><a href="#2、修改-fluid-配置" class="headerlink" title="2、修改 fluid 配置"></a>2、修改 fluid 配置</h4><p>打开主题目录 themes\fluid下的 <code>_config.yml</code> 文件，修改如下配置</p><p><strong>单篇文章阅读数量统计</strong></p><p><img src="13.png" alt="网页访问统计"></p><p><img src="14.png" alt="配置leancloud"></p><p><img src="15.png" alt="统计数据来源"></p><p><strong>页面底部展示网站的 PV、UV 统计数</strong></p><p><img src="16.png" alt="展示网站的 PV、UV 统计数"></p><h3 id="八、添加评论功能"><a href="#八、添加评论功能" class="headerlink" title="八、添加评论功能"></a>八、添加评论功能</h3><p>评论功能的代码已经写好了，只不过没有开启，需要修改一些配置</p><p>打开主题目录 themes\fluid 下的 <code>_config.yml</code> 文件，修改如下配置</p><p>启用评论插件</p><p><img src="17.png" alt="启用评论插件"></p><p><img src="18.png" alt="valine"></p><p>重新部署后再访问测试文章页面，评论功能已开启</p><p><strong>部署在本地时评论无法提交，会报跨域问题，发布到 GitHub Pages 上之后课正常提交评论</strong></p><h3 id="九、发布至Github-Pages"><a href="#九、发布至Github-Pages" class="headerlink" title="九、发布至Github Pages"></a>九、发布至Github Pages</h3><h4 id="1、安装-hexo-deployer-git"><a href="#1、安装-hexo-deployer-git" class="headerlink" title="1、安装 hexo-deployer-git"></a>1、安装 hexo-deployer-git</h4><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><h4 id="2、修改项目hexo-blog目录下的-config-yml文件的最后几行，配置Github相关信息"><a href="#2、修改项目hexo-blog目录下的-config-yml文件的最后几行，配置Github相关信息" class="headerlink" title="2、修改项目hexo-blog目录下的_config.yml文件的最后几行，配置Github相关信息"></a>2、修改项目hexo-blog目录下的<code>_config.yml</code>文件的最后几行，配置Github相关信息</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/*****/******.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br>  <span class="hljs-attr">token:</span> <span class="hljs-string">******************************************</span><br></code></pre></td></tr></table></figure><p>其中 token 为 GitHub 的 Personal access tokens ，获取方式如图所示</p><p><img src="19.png" alt="token"></p><h4 id="3、部署到GitHub"><a href="#3、部署到GitHub" class="headerlink" title="3、部署到GitHub"></a>3、部署到GitHub</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g -d</span><br></code></pre></td></tr></table></figure><h3 id="十、最终效果展示"><a href="#十、最终效果展示" class="headerlink" title="十、最终效果展示"></a>十、最终效果展示</h3><p><strong>访问自己的页面网址，个人博客就搭建完成啦！</strong></p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
      <category>Github</category>
      
      <category>Leancloud</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2022/01/09/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2022/01/09/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<p>这是一篇测试文章</p><img src="/2022/01/09/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/test.png" class="" title="图片引用方法一"><p><img src="test.png" alt="图片引用方法二"></p><p><img src="/images/test.png" alt="图片引用方法三"></p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/01/09/hello-world/"/>
    <url>/2022/01/09/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
